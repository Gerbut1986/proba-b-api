<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Background-->
    <SolidColorBrush x:Key="Background" Color="#1C1C1C"/>
    <SolidColorBrush x:Key="LightBackground" Color="#2D2D30"/>

    <!--Foreground-->
    <SolidColorBrush x:Key="Foreground" Color="#FFFFFF"/>

    <!--General-->
    <SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
    <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
    <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
    <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
    <SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>
    <SolidColorBrush x:Key="BorderBrushNormal" Color="#54545C"/>
   
    <!--Text Box-->
    <SolidColorBrush x:Key="TextBoxBackground" Color="#354159"/>
    <SolidColorBrush x:Key="TextBoxBackgroundSelected" Color="#3F3F46"/>
    
    <!--Search Text Box-->
    <SolidColorBrush x:Key="SearchTextForeground" Color="#999999"/>
    
    <!--Link Button-->
    <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB"/>
    <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF"/>
    
    <!--Close Button-->
    <SolidColorBrush x:Key="CloseButtonBackgroundHighlighted" Color="#39ADFB"/>
    <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="#084E7D"/>
    <SolidColorBrush x:Key="CloseButtonStroke" Color="#AAFFFFFF"/>
    <SolidColorBrush x:Key="CloseButtonStrokeHighlighted" Color="#FFFFFF"/>
    
    <!--Menu-->
    <SolidColorBrush x:Key="MenuSeparatorBorderBrush" Color="#333337"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBackground" Color="#3E3E40"/>
    <SolidColorBrush x:Key="SubmenuItemBackground" Color="#1B1B1C"/>
    <SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" Color="#333334"/>
    <SolidColorBrush x:Key="MenuDisabledForeground" Color="#656565"/>
    
    <!--Scroll Bar-->
    <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted" Color="#05FFFFFF"/>


    <!-- =============================== MY STYLES  ===============================  -->
    <SolidColorBrush x:Key="cwWindowTitleBackground" Color="#002344"></SolidColorBrush>
    <SolidColorBrush x:Key="cwWindowBorderBrush" Color="#7ab6f3" />
    <SolidColorBrush x:Key="cwWindowBorderBrushInactive" Color="#3F3F46" />
    <SolidColorBrush x:Key="cwWindowStatusForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="cwWindowStatusForegroundInactive" Color="#FFFFFF" />
    <SolidColorBrush x:Key="cwSelectedTabBackground" Color="#b6d800"></SolidColorBrush>
    <SolidColorBrush x:Key="cwTabStripBackground" Color="#006dc5"></SolidColorBrush>
    <SolidColorBrush x:Key="cwLightControlBackground" Color="#97e2f9"></SolidColorBrush>
    <SolidColorBrush x:Key="cwGrayBackground" Color="#efefef"></SolidColorBrush>
    
    <Style x:Key="myLogCloseButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="{StaticResource BackgroundSelected}" BorderThickness="0" Padding="2"/>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myGrayButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="{StaticResource BackgroundSelected}" BorderBrush="Blue" BorderThickness="1" Padding="2"/>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myBlueButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="#006dc5" BorderThickness="2" Padding="2" Opacity="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#ff6e02"></GradientStop>
                                        <GradientStop Offset="0.5" Color="#ffff00"></GradientStop>
                                        <GradientStop Offset="1" Color="#ff6e02"></GradientStop>                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.3"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myRedButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="#ff3a00" BorderThickness="2" Padding="2" Opacity="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#ff6e02"></GradientStop>
                                        <GradientStop Offset="0.5" Color="#ffff00"></GradientStop>
                                        <GradientStop Offset="1" Color="#ff6e02"></GradientStop>                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.3"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myGreenButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#002344"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="#b6d800" BorderThickness="2" Padding="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#ff6e02"></GradientStop>
                                        <GradientStop Offset="0.5" Color="#ffff00"></GradientStop>
                                        <GradientStop Offset="1" Color="#ff6e02"></GradientStop>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.3"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myGreenThinButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#002344"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="#b6d800" BorderThickness="1" Padding="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#ff6e02"></GradientStop>
                                        <GradientStop Offset="0.5" Color="#ffff00"></GradientStop>
                                        <GradientStop Offset="1" Color="#ff6e02"></GradientStop>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="5,3,5,3" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bfd730"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.3"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myOptionsButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                        <Image x:Name="PART_image" Height="32" Width="32" Source="../Res/options.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_image" Property="Source" Value="../Res/options_hover.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myHomeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                        <Image x:Name="PART_image" Height="50" Width="50" Margin="-9,-9,0,0" Source="../Res/home.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_image" Property="Source" Value="../Res/home2.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myChartButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="32" Width="32" Source="../Res/chart.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myLeftGroupBox" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundNormal}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <!--<TextBlock Foreground="White" Text="{TemplateBinding Header}" 
                                       FontSize="15"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10">
                                <TextBlock.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"></RotateTransform>
                                    </TransformGroup>
                                </TextBlock.LayoutTransform>
                            </TextBlock>-->
                            <ItemsControl ItemsSource="{TemplateBinding Header,Converter={StaticResource toChars}}"
                                          Margin="0,5" VerticalAlignment="Center">
                                <ItemsControl.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"></RotateTransform>
                                    </TransformGroup>
                                </ItemsControl.LayoutTransform>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Foreground="White" FontSize="14" Text="{Binding}" Margin="0,0,1,0"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                        <ContentPresenter Margin="0,5,0,0" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myMenu" TargetType="ContextMenu">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource cwWindowTitleBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                Background="{StaticResource cwWindowTitleBackground}"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#000" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ContextMenu" BasedOn="{StaticResource myMenu}"/>

    <Style x:Key="myStartButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="24" Width="24" Source="../Res/start.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myStopButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="24" Width="24" Source="../Res/stop.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myChartButton2" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="24" Width="24" Source="../Res/chart2.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myEditProviderButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="16" Width="16" Source="../Res/editProvider.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="myDeleteProviderButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="16" Width="16" Source="../Res/deleteProvider.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myAddProviderButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Opacity="0.8" Height="16" Width="16" Source="../Res/addProvider.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="myLoadButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="16" Width="16" Source="../Res/openfile.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>

    <Style x:Key="mySaveButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3"/>
                        <Image x:Name="PART_image" Height="16" Width="16" Source="../Res/savefile.png"></Image>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_border" Property="Background" Value="#a0a0ff" />-->
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_image" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
    </Style>
</ResourceDictionary>